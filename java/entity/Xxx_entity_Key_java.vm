## Include
#parse("include/var_entity.vm")
## Use macro resolve header
#package($SRC)

import java.io.Serializable;
## Use macro resolve imports
#imports($entity.keyAttributes true)

/**
 * Composite primary key for entity "$entityClass" ( stored in table "$tableName" )
 * $author
 */
 @Embeddable
public class $entityKeyClass implements Serializable {
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY KEY ATTRIBUTES 
    //----------------------------------------------------------------------
#foreach($field in $entity.keyAttributes)
$jpa.embeddedIdAnnotations(4, $field)
    private $field.type $field.name #if($field.hasInitialValue())= ${field.initialValue} #end;
#end

    //----------------------------------------------------------------------
    // CONSTRUCTORS
    //----------------------------------------------------------------------
    public $entityKeyClass() {
        super();
    }

    public $entityKeyClass($keyArgsListWrapperType) {
        super();
#foreach($field in $entity.keyAttributes)
        this.$field.name = $field.name ;
#end
    }
    
    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR KEY FIELDS
    //----------------------------------------------------------------------
#foreach($field in $entity.keyAttributes)
#if($field.setter)    
	public void ${field.setter}($field.type value) {
        this.$field.name = value;
    }
#end
#if($field.getter)    
	public $field.type ${field.getter}() {
        return this.$field.name;
    }
#end

#end  

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() {
		StringBuilder sb = new StringBuilder(); 
#set( $count = 0 )
#foreach( $field in $entity.keyAttributes )
#if( $count > 0 )
		sb.append("|"); 
#end
		sb.append($field.name); 
#set( $count = $count + 1 )
#end  
        return sb.toString();
    }
}
